{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","base.js","components/AddBakeryForm.js","components/EditBakeryForm.js","components/Login.js","components/Inventory.js","sample-bread.js","components/Item.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","random","arr","Math","floor","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","item","items","count","order","status","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","AddBakeryForm","nameRef","priceRef","statusRef","descriptionRef","imageRef","createItem","parseFloat","description","image","addItem","currentTarget","reset","EditBakeryForm","handleChange","console","log","updatedItem","updateItem","index","onChange","deleteItem","Login","authenticate","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleItems","item1","item2","item3","item4","item5","item6","item7","item8","item9","Item","handleClick","addToOrder","details","isAvailable","src","alt","disabled","App","Date","now","sampleBread","localStorageRef","localStorage","getItem","match","params","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.135c9249.chunk.js","sourcesContent":["export function formatPrice(cents) {\n\treturn (cents / 100).toLocaleString(\"en-US\", {\n\t\tstyle: \"currency\",\n\t\tcurrency: \"GBP\",\n\t});\n}\n\nexport function random(arr) {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n\treturn text\n\t\t.toString()\n\t\t.toLowerCase()\n\t\t.replace(/\\s+/g, \"-\")\n\t\t.replace(/[^\\w-]+/g, \"\")\n\t\t.replace(/--+/g, \"-\")\n\t\t.replace(/^-+/, \"\")\n\t\t.replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n\tconst adjectives = [\n\t\t\"adorable\",\n\t\t\"beautiful\",\n\t\t\"clean\",\n\t\t\"drab\",\n\t\t\"elegant\",\n\t\t\"fancy\",\n\t\t\"glamorous\",\n\t\t\"handsome\",\n\t\t\"long\",\n\t\t\"magnificent\",\n\t\t\"old-fashioned\",\n\t\t\"plain\",\n\t\t\"quaint\",\n\t\t\"sparkling\",\n\t\t\"ugliest\",\n\t\t\"unsightly\",\n\t\t\"angry\",\n\t\t\"bewildered\",\n\t\t\"clumsy\",\n\t\t\"defeated\",\n\t\t\"embarrassed\",\n\t\t\"fierce\",\n\t\t\"grumpy\",\n\t\t\"helpless\",\n\t\t\"itchy\",\n\t\t\"jealous\",\n\t\t\"lazy\",\n\t\t\"mysterious\",\n\t\t\"nervous\",\n\t\t\"obnoxious\",\n\t\t\"panicky\",\n\t\t\"repulsive\",\n\t\t\"scary\",\n\t\t\"thoughtless\",\n\t\t\"uptight\",\n\t\t\"worried\",\n\t];\n\n\tconst nouns = [\n\t\t\"pretzels\",\n\t\t\"croissants\",\n\t\t\"bread\",\n\t\t\"muffins\",\n\t\t\"baker\",\n\t\t\"bakery\",\n\t\t\"flour\",\n\t\t\"baguette\",\n\t];\n\n\treturn `${random(adjectives)}-${random(adjectives)}-${random(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n\tstatic propTypes = {\n\t\thistory: PropTypes.object,\n\t};\n\n\tmyInput = React.createRef();\n\n\tgoToStore = (event) => {\n\t\t// Stop the form from submitting\n\t\tevent.preventDefault();\n\t\t// Get the text from that input\n\t\t// The first .current is a React thing that is always how you access the ref\n\t\t// .current contains the DOM element reference (the input element)\n\t\t// The second .value is from JavaScript to access the value of the input\n\t\tconst storeName = this.myInput.current.value;\n\t\t// Change the page to /store/whatever-store-name\n\t\tthis.props.history.push(`/store/${storeName}`); // This will push the new URL to STATE (push state)\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<form className=\"store-selector\" onSubmit={this.goToStore}>\n\t\t\t\t\t<h2>Please Enter A Bakery Name</h2>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.myInput}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder=\"Store Name\"\n\t\t\t\t\t\tdefaultValue={getFunName()}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type=\"submit\">Go To Store</button>\n\t\t\t\t</form>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) => {\n\treturn (\n\t\t<header className=\"top\">\n\t\t\t<h1>\n\t\t\t\tFresh\n\t\t\t\t<span className=\"outThe\">\n\t\t\t\t\t<span className=\"out\">Out</span>\n\t\t\t\t\t<span className=\"the\">The</span>\n\t\t\t\t</span>\n\t\t\t\tOven\n\t\t\t</h1>\n\t\t\t<h3 className=\"tagline\">\n\t\t\t\t<span>{props.tagline}</span>\n\t\t\t</h3>\n\t\t</header>\n\t);\n};\n\nHeader.propTypes = {\n\ttagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n\tstatic propTypes = {\n\t\titems: PropTypes.object,\n\t\torder: PropTypes.object,\n\t\tremoveFromOrder: PropTypes.func,\n\t};\n\n\trenderOrder = (key) => {\n\t\tconst item = this.props.items[key];\n\t\tconst count = this.props.order[key];\n\t\t// Make sure the bakery item is loaded before we continue\n\t\tif (!item) {\n\t\t\treturn null;\n\t\t}\n\t\tconst isAvailable = item && item.status === \"available\";\n\t\tif (!isAvailable) {\n\t\t\treturn (\n\t\t\t\t<li key={key}>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\tSorry, {item ? item.name : \"item\"} is sold out\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<CSSTransition\n\t\t\t\tclassNames=\"order\"\n\t\t\t\tkey={key}\n\t\t\t\ttimeout={{ enter: 250, exit: 250 }}\n\t\t\t>\n\t\t\t\t<li key={key}>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<TransitionGroup component=\"span\" className=\"count\">\n\t\t\t\t\t\t\t<CSSTransition\n\t\t\t\t\t\t\t\tclassNames=\"count\"\n\t\t\t\t\t\t\t\tkey={count}\n\t\t\t\t\t\t\t\ttimeout={{ enter: 300, exit: 300 }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span>{count} </span>\n\t\t\t\t\t\t\t</CSSTransition>\n\t\t\t\t\t\t</TransitionGroup>\n\t\t\t\t\t\t{item.name} {formatPrice(count * item.price)}\n\t\t\t\t\t\t<button onClick={() => this.props.removeFromOrder(key)}>\n\t\t\t\t\t\t\t&times;{\" \"}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t</CSSTransition>\n\t\t);\n\t};\n\n\trender() {\n\t\tconst orderIds = Object.keys(this.props.order);\n\t\tconst total = orderIds.reduce((prevTotal, key) => {\n\t\t\tconst item = this.props.items[key];\n\t\t\tconst count = this.props.order[key];\n\t\t\tconst isAvailable = item && item.status === \"available\";\n\n\t\t\tif (isAvailable) {\n\t\t\t\treturn prevTotal + count * item.price;\n\t\t\t}\n\t\t\treturn prevTotal;\n\t\t}, 0);\n\n\t\treturn (\n\t\t\t<div className=\"order-wrap\">\n\t\t\t\t<h2>Order </h2>\n\t\t\t\t<TransitionGroup component=\"ul\" className=\"order\">\n\t\t\t\t\t{orderIds.map(this.renderOrder)}\n\t\t\t\t</TransitionGroup>\n\t\t\t\t<div className=\"total\">\n\t\t\t\t\tTotal:\n\t\t\t\t\t<strong>{formatPrice(total)}</strong>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Order;\n","// This is a Firebase specific package from React, it allows us to mirror our state to our Firebase database\nimport Rebase from \"re-base\";\n\n// This is the official Firebase package for React\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n\tapiKey: \"AIzaSyA0JNTHViXQFq0aW9S0KDQ4LWSiqTWrdsM\",\n\tauthDomain: \"bakery-inventory.firebaseapp.com\",\n\tprojectId: \"bakery-inventory\",\n\tstorageBucket: \"bakery-inventory.appspot.com\",\n\tmessagingSenderId: \"1064417565914\",\n\tappId: \"1:1064417565914:web:031d52b83dc830ef0999e3\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddBakeryForm extends React.Component {\n\tnameRef = React.createRef();\n\tpriceRef = React.createRef();\n\tstatusRef = React.createRef();\n\tdescriptionRef = React.createRef();\n\timageRef = React.createRef();\n\n\tstatic propTypes = {\n\t\taddItem: PropTypes.func,\n\t};\n\n\tcreateItem = (event) => {\n\t\tevent.preventDefault(); // stops the form from submitting\n\t\tconst item = {\n\t\t\tname: this.nameRef.current.value,\n\t\t\tprice: parseFloat(this.priceRef.current.value), // parses string into a float (cents)\n\t\t\tstatus: this.statusRef.current.value,\n\t\t\tdescription: this.descriptionRef.current.value,\n\t\t\timage: this.imageRef.current.value,\n\t\t};\n\t\tthis.props.addItem(item);\n\t\t// reset the form (empties text fields)\n\t\tevent.currentTarget.reset();\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<form className=\"item-edit\" onSubmit={this.createItem}>\n\t\t\t\t<input\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tref={this.nameRef}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tname=\"price\"\n\t\t\t\t\tref={this.priceRef}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Price\"\n\t\t\t\t/>\n\t\t\t\t<select name=\"status\" ref={this.statusRef}>\n\t\t\t\t\t<option value=\"available\">Available</option>\n\t\t\t\t\t<option value=\"unavailable\">Sold Out</option>\n\t\t\t\t</select>\n\t\t\t\t<textarea\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tref={this.descriptionRef}\n\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tname=\"image\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={this.imageRef}\n\t\t\t\t\tplaceholder=\"Image\"\n\t\t\t\t/>\n\t\t\t\t<button type=\"submit\">+ Add Item</button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddBakeryForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditBakeryForm extends React.Component {\n\tstatic propTypes = {\n\t\titem: PropTypes.shape({\n\t\t\timage: PropTypes.string,\n\t\t\tname: PropTypes.string,\n\t\t\tdescription: PropTypes.string,\n\t\t\tstatus: PropTypes.string,\n\t\t\tprice: PropTypes.number,\n\t\t}),\n\n\t\tupdateItem: PropTypes.func,\n\t\tdeleteItem: PropTypes.func,\n\t};\n\n\thandleChange = (event) => {\n\t\tconsole.log(event.currentTarget.value);\n\t\t// Update that item\n\t\t// 1. Take a copy of the current item\n\n\t\tconst updatedItem = {\n\t\t\t...this.props.item,\n\t\t\t[event.currentTarget.name]: event.currentTarget.value,\n\t\t};\n\t\tthis.props.updateItem(this.props.index, updatedItem);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"item-edit\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tvalue={this.props.item.name}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"price\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tvalue={this.props.item.price}\n\t\t\t\t/>\n\t\t\t\t<select\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"status\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tvalue={this.props.item.status}\n\t\t\t\t>\n\t\t\t\t\t<option value=\"available\">Available</option>\n\t\t\t\t\t<option value=\"unavailable\">Sold out</option>\n\t\t\t\t</select>\n\t\t\t\t<textarea\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tvalue={this.props.item.description}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"image\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tvalue={this.props.item.image}\n\t\t\t\t/>\n\t\t\t\t<button onClick={() => this.props.deleteItem(this.props.index)}>\n\t\t\t\t\tRemove Item\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditBakeryForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n\t<nav className=\"login\">\n\t\t<h2>Inventory login</h2>\n\t\t<p>Sign in to manage your bakery's inventory</p>\n\n\t\t<button\n\t\t\tclassName=\"twitter\"\n\t\t\tonClick={() => props.authenticate(\"Twitter\")}\n\t\t>\n\t\t\tLogin with Twitter\n\t\t</button>\n\n\t\t<button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n\t\t\tLogin with GitHub\n\t\t</button>\n\n\t\t<button\n\t\t\tclassName=\"facebook\"\n\t\t\tonClick={() => props.authenticate(\"Facebook\")}\n\t\t>\n\t\t\tLogin with Facebook\n\t\t</button>\n\t</nav>\n);\n\nLogin.propTypes = {\n\tauthenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport base, { firebaseApp } from \"../base\";\nimport firebase from \"firebase\";\nimport AddBakeryForm from \"./AddBakeryForm.js\";\nimport EditBakeryForm from \"./EditBakeryForm\";\nimport Login from \"./Login\";\n\nclass Inventory extends React.Component {\n\tstatic propTypes = {\n\t\titem: PropTypes.object,\n\t\tupdateItem: PropTypes.func,\n\t\tdeleteItem: PropTypes.func,\n\t\tloadSampleItems: PropTypes.func,\n\t};\n\n\tstate = {\n\t\tuid: null,\n\t\towner: null,\n\t};\n\n\tcomponentDidMount() {\n\t\tfirebase.auth().onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\tthis.authHandler({ user });\n\t\t\t}\n\t\t});\n\t}\n\n\tauthHandler = async (authData) => {\n\t\t// 1. Look up the current store in the firebase database\n\t\tconst store = await base.fetch(this.props.storeId, { context: this });\n\n\t\t// 2. Claim it if there's no owner\n\t\tif (!store.owner) {\n\t\t\t// save it as our own store\n\t\t\tawait base.post(`${this.props.storeId}/owner`, {\n\t\t\t\tdata: authData.user.uid,\n\t\t\t});\n\t\t}\n\n\t\t// 3. Set the state of the inventory component to reflect the current user\n\t\tthis.setState({\n\t\t\tuid: authData.user.uid,\n\t\t\towner: store.owner || authData.user.uid,\n\t\t});\n\t};\n\n\tauthenticate = (provider) => {\n\t\tconst authProvider = new firebase.auth[`${provider}AuthProvider`]();\n\t\tfirebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n\t};\n\n\tlogout = async () => {\n\t\tawait firebase.auth().signOut();\n\t\tthis.setState({ uid: null });\n\t};\n\n\trender() {\n\t\t// Logout button saved in a variable\n\t\tconst logout = (\n\t\t\t<button className=\"logout\" onClick={this.logout}>\n\t\t\t\tLog out\n\t\t\t</button>\n\t\t);\n\n\t\t// 1. Check if user is logged in\n\t\tif (!this.state.uid) {\n\t\t\treturn <Login authenticate={this.authenticate} />;\n\t\t}\n\n\t\t// 2. Check if they are NOT the owner of the store\n\t\tif (this.state.uid !== this.state.owner) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<p>Sorry, you are not the owner of this store</p>\n\t\t\t\t\t{logout}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\t// 3. they must be the owner, just render the inventory\n\t\treturn (\n\t\t\t<div className=\"inventory\">\n\t\t\t\t<h2>Inventory</h2>\n\t\t\t\t{Object.keys(this.props.item).map((key) => (\n\t\t\t\t\t<EditBakeryForm\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\tindex={key}\n\t\t\t\t\t\titem={this.props.item[key]}\n\t\t\t\t\t\tupdateItem={this.props.updateItem}\n\t\t\t\t\t\tdeleteItem={this.props.deleteItem}\n\t\t\t\t\t></EditBakeryForm>\n\t\t\t\t))}\n\t\t\t\t<AddBakeryForm addItem={this.props.addItem}></AddBakeryForm>\n\t\t\t\t<button onClick={this.props.loadSampleItems}>\n\t\t\t\t\tLoad Sample Items\n\t\t\t\t</button>\n\t\t\t\t{logout}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst items = {\n\titem1: {\n\t\tname: \"Multigrain Bread\",\n\t\timage: \"/images/pain-multigrain.png\",\n\t\tdescription:\n\t\t\t\"A multigrain loaf made with wheat and rye flour topped with seeds.\",\n\t\tprice: 350,\n\t\tstatus: \"available\",\n\t},\n\n\titem2: {\n\t\tname: \"Pain de Champagne\",\n\t\timage: \"/images/pain-champagne.png\",\n\t\tdescription:\n\t\t\t\"Country Bread made from a soft blend of natural yeast, rye flour and sea salt.\",\n\t\tprice: 320,\n\t\tstatus: \"available\",\n\t},\n\n\titem3: {\n\t\tname: \"Pain Ancien\",\n\t\timage: \"/images/pain-ancien.png\",\n\t\tdescription:\n\t\t\t\"Wonderfully versatile, everyday bread loaf, made with our selected flour, sea salt and natural yeast.\",\n\t\tprice: 350,\n\t\tstatus: \"unavailable\",\n\t},\n\n\titem4: {\n\t\tname: \"Olive Bread\",\n\t\timage: \"/images/olive-bread.png\",\n\t\tdescription:\n\t\t\t\"Crusty but light, with an intense flavour of Provençal olives scented with thyme.\",\n\t\tprice: 390,\n\t\tstatus: \"available\",\n\t},\n\n\titem5: {\n\t\tname: \"French Baguette\",\n\t\timage: \"/images/baguette.jpg\",\n\t\tdescription:\n\t\t\t\"Classic baguette made the old-fashioned way with white flour, natural yeast, sea salt and water.\",\n\t\tprice: 120,\n\t\tstatus: \"available\",\n\t},\n\n\titem6: {\n\t\tname: \"Cheese Straw\",\n\t\timage: \"/images/cheese-straw.jpg\",\n\t\tdescription:\n\t\t\t\"This flaky cheese straw is made with aged cheddar and cracked black pepper.\",\n\t\tprice: 120,\n\t\tstatus: \"available\",\n\t},\n\n\titem7: {\n\t\tname: \"All Butter Croissant\",\n\t\timage: \"/images/croissant.jpg\",\n\t\tdescription:\n\t\t\t\"An authentic and gloriously golden croissant, made with pure butter.\",\n\t\tprice: 100,\n\t\tstatus: \"available\",\n\t},\n\n\titem8: {\n\t\tname: \"English Muffin\",\n\t\timage: \"/images/english-muffin.jpg\",\n\t\tdescription:\n\t\t\t\"Our muffins are slow baked on a stove top, the traditional way.\",\n\t\tprice: 80,\n\t\tstatus: \"available\",\n\t},\n\n\titem9: {\n\t\tname: \"Pain au Chocolat\",\n\t\timage: \"/images/pain-choc.jpg\",\n\t\tdescription:\n\t\t\t\"Our Pain au Chocolat is made with pure butter and a heart of rich dark chocolate.\",\n\t\tprice: 110,\n\t\tstatus: \"available\",\n\t},\n};\n\nexport default items;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers.js\";\n\nclass Item extends React.Component {\n\tstatic propTypes = {\n\t\tdetails: PropTypes.shape({\n\t\t\timage: PropTypes.string,\n\t\t\tname: PropTypes.string,\n\t\t\tdescription: PropTypes.string,\n\t\t\tstatus: PropTypes.string,\n\t\t\tprice: PropTypes.number,\n\t\t}),\n\t\taddToOrder: PropTypes.func,\n\t};\n\n\thandleClick = () => {\n\t\tthis.props.addToOrder(this.props.index);\n\t};\n\n\trender() {\n\t\t// This will destructure the instances of the object properties, and save it as image, name, price, etc\n\t\t// same as this.props.value.image, this.props.value.image\n\t\tconst { image, name, price, description, status } = this.props.details;\n\n\t\tconst isAvailable = status === \"available\";\n\n\t\treturn (\n\t\t\t<li className=\"menu-items\">\n\t\t\t\t<img src={image} alt={name} />\n\t\t\t\t<h3 className=\"item-name\">\n\t\t\t\t\t{name}\n\t\t\t\t\t<span className=\"price\">{formatPrice(price)}</span>\n\t\t\t\t</h3>\n\t\t\t\t<p>{description}</p>\n\t\t\t\t<button disabled={!isAvailable} onClick={this.handleClick}>\n\t\t\t\t\t{isAvailable ? \"Add to Order\" : \"Sold out!\"}\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nexport default Item;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header.js\";\nimport Order from \"./Order.js\";\nimport Inventory from \"./Inventory.js\";\nimport sampleBread from \"../sample-bread\";\nimport Item from \"./Item.js\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n\tstate = {\n\t\titems: {},\n\t\torder: {},\n\t};\n\n\tstatic propTypes = {\n\t\tmatch: PropTypes.object,\n\t};\n\n\tcomponentDidMount() {\n\t\t// First reinstate our localStorage\n\t\tconst localStorageRef = localStorage.getItem(\n\t\t\tthis.props.match.params.storeId\n\t\t);\n\t\tif (localStorageRef) {\n\t\t\tthis.setState({ order: JSON.parse(localStorageRef) });\n\t\t}\n\n\t\tthis.ref = base.syncState(`${this.props.match.params.storeId}/items`, {\n\t\t\tcontext: this,\n\t\t\tstate: \"items\",\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tlocalStorage.setItem(\n\t\t\tthis.props.match.params.storeId,\n\t\t\tJSON.stringify(this.state.order)\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tbase.removeBinding(this.ref);\n\t}\n\n\taddItem = (item) => {\n\t\t// 1. Take a copy of the existing state\n\t\tconst items = { ...this.state.items }; // using a spread it creates a clone/copy of the same object\n\t\t// 2. Add our new item to the items variable\n\t\titems[`item${Date.now()}`] = item; // Using date now will give you a unique number (number of seconds since 1970 983947209472)\n\t\t// 3. set the new items object to state\n\t\tthis.setState({ items });\n\t};\n\n\tupdateItem = (key, updatedItem) => {\n\t\t// 1. take a copy of the current state\n\t\tconst items = { ...this.state.items };\n\n\t\t// 2. Update that state\n\t\titems[key] = updatedItem;\n\n\t\t// 3. Set that to state\n\t\tthis.setState({ items });\n\t};\n\n\tdeleteItem = (key) => {\n\t\t// 1. take a copy of state\n\t\tconst items = { ...this.state.items };\n\t\t// 2. update the state\n\t\titems[key] = null;\n\t\t// 3. update state\n\t\tthis.setState({ items });\n\t};\n\n\tloadSampleItems = () => {\n\t\tthis.setState({ items: sampleBread });\n\t};\n\n\taddToOrder = (key) => {\n\t\t//1. take a copy of state\n\t\tconst order = { ...this.state.order };\n\t\t// 2. Either add to the order, or update the number in our order\n\t\torder[key] = order[key] + 1 || 1;\n\t\t// 3. Call setState to update our state object\n\t\tthis.setState({ order });\n\t};\n\n\tremoveFromOrder = (key) => {\n\t\t//1. take a copy of state\n\t\tconst order = { ...this.state.order };\n\t\t// 2. remove item from order\n\t\tdelete order[key];\n\t\t// 3. Call setState to update our state object\n\t\tthis.setState({ order });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"fresh-out-the-oven\">\n\t\t\t\t<div className=\"menu\">\n\t\t\t\t\t<Header tagline=\"Street Bakery\" />\n\t\t\t\t\t<ul className=\"items\">\n\t\t\t\t\t\t{Object.keys(this.state.items).map((key) => (\n\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tindex={key}\n\t\t\t\t\t\t\t\tdetails={this.state.items[key]}\n\t\t\t\t\t\t\t\taddToOrder={this.addToOrder}\n\t\t\t\t\t\t\t\tremoveFromOrder={this.removeFromOrder}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<Order\n\t\t\t\t\titems={this.state.items}\n\t\t\t\t\torder={this.state.order}\n\t\t\t\t\tremoveFromOrder={this.removeFromOrder}\n\t\t\t\t/>\n\t\t\t\t<Inventory\n\t\t\t\t\taddItem={this.addItem}\n\t\t\t\t\tupdateItem={this.updateItem}\n\t\t\t\t\tdeleteItem={this.deleteItem}\n\t\t\t\t\tloadSampleItems={this.loadSampleItems}\n\t\t\t\t\titem={this.state.items}\n\t\t\t\t\tstoreId={this.props.match.params.storeId}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Page Not Found!!!</h2>\n\t\t</div>\n\t);\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker.js\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound.js\";\n\nconst Router = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={StorePicker} />\n\t\t\t\t<Route path=\"/store/:storeId\" component={App} />\n\t\t\t\t<Route component={NotFound} />\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\n// import App from \"./components/App.js\";\nimport \"../src/css/style.css\";\n// import StorePicker from \"./components/StorePicker\";\nimport Router from \"./components/Router.js\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}